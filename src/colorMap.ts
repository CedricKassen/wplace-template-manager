export enum FreeColor {
    BLACK = "#000000",
    DARK_GRAY = "#3c3c3c",
    GRAY = "#787878",
    LIGHT_GRAY = "#d2d2d2",
    WHITE = "#ffffff",
    DEEP_RED = "#600018",
    RED = "#ed1c24",
    ORANGE = "#ff7f27",
    GOLD = "#f6aa09",
    YELLOW = "#f9dd3b",
    LIGHT_YELLOW = "#fffabc",
    DARK_GREEN = "#0eb968",
    GREEN = "#13e67b",
    LIGHT_GREEN = "#87ff5e",
    DARK_TEAL = "#0c816e",
    TEAL = "#10aea6",
    LIGHT_TEAL = "#13e1be",
    CYAN = "#60f7f2",
    DARK_BLUE = "#28509e",
    BLUE = "#4093e4",
    INDIGO = "#6b50f6",
    LIGHT_INDIGO = "#99b1fb",
    DARK_PURPLE = "#780c99",
    PURPLE = "#aa38b9",
    LIGHT_PURPLE = "#e09ff9",
    DARK_PINK = "#cb007a",
    PINK = "#ec1f80",
    LIGHT_PINK = "#f38da9",
    DARK_BROWN = "#684634",
    BROWN = "#95682a",
    BEIGE = "#f8b277",
}

export enum PaidColor {
    MEDIUM_GRAY = "#aaaaaa",
    DARK_RED = "#a50e1e",
    LIGHT_RED = "#fa8072",
    DARK_ORANGE = "#e45c1a",
    DARK_GOLDENROD = "#9c8431",
    GOLDENROD = "#c5ad31",
    LIGHT_GOLDENROD = "#e8d45f",
    DARK_OLIVE = "#4a6b3a",
    OLIVE = "#5a944a",
    LIGHT_OLIVE = "#84c573",
    DARK_CYAN = "#0f799f",
    LIGHT_CYAN = "#bbfaf2",
    LIGHT_BLUE = "#7dc7ff",
    DARK_INDIGO = "#4d31b8",
    DARK_SLATE_BLUE = "#4a4284",
    SLATE_BLUE = "#7a71c4",
    LIGHT_SLATE_BLUE = "#b5aef1",
    DARK_PEACH = "#9b5249",
    PEACH = "#d18078",
    LIGHT_PEACH = "#fab6a4",
    LIGHT_BROWN = "#dba463",
    DARK_TAN = "#7b6352",
    TAN = "#9c846b",
    LIGHT_TAN = "#d6b594",
    DARK_BEIGE = "#d18051",
    LIGHT_BEIGE = "#ffc5a5",
    DARK_STONE = "#6d643f",
    STONE = "#948c6b",
    LIGHT_STONE = "#cdc59e",
    DARK_SLATE = "#333941",
    SLATE = "#6d758d",
    LIGHT_SLATE = "#b3b9d1",
}

const FreeColorEntries = Object.entries(FreeColor) as [keyof typeof FreeColor, FreeColor][];
const PaidColorEntries = Object.entries(PaidColor) as [keyof typeof PaidColor, PaidColor][];

export const FreeColorMap = new Map<keyof typeof FreeColor, FreeColor>(FreeColorEntries);
export const PaidColorMap = new Map<keyof typeof PaidColor, PaidColor>(PaidColorEntries);
export const InvertedFreeColorMap = new Map<FreeColor, keyof typeof FreeColor>(
    FreeColorEntries.map(([first, second]) => [second, first]),
);
export const InvertedPaidColorMap = new Map<PaidColor, keyof typeof PaidColor>(
    PaidColorEntries.map(([first, second]) => [second, first]),
);
