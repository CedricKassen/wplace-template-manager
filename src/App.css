.App {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    height: min-content;
    width: 100vw;
    z-index: 1000 ;
    pointer-events: none;
}

@media only screen and (min-width: 835px) {
    .App {
        z-index: 10;
    }
}

.App-logo {
    height: 40vmin;
}
.App-link {
    color: #09d3ac;
}

.Overlay h1 {
    font-size: 16pt;
    font-weight: bold;
}

.Overlay .row {
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: space-between;
    flex-wrap: wrap;
    flex-grow: 0;
    align-items: center;
    gap: 8px;
}

.Overlay .column {
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: center;
    align-items: center;
    gap: 8px;
}

.groupRow {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    align-items: center;
}

.ColorCheckbox {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.icon {
    width: 1rem;
    height: 1rem;
    cursor: pointer;
}

.ColorCheckbox input[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid #ccc;
    border-radius: 4px;
    cursor: pointer;
    position: relative;
    margin: 0;
}

.ColorCheckbox input[type="checkbox"]:checked {
    border-color: #666;
}

.ColorCheckbox input[type="checkbox"]:checked::before {
    content: 'âœ“';
    position: absolute;
    color: white;
    font-size: 16px;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
}

.ColorCheckbox span {
    visibility: hidden;
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    text-align: center;
    padding: 4px 8px;
    border-radius: 4px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    font-size: 14px;
    pointer-events: none;
}

.ColorCheckbox span::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
}

.ColorCheckbox input[type="checkbox"]:hover + span {
    visibility: visible;
}

.FileInput {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.FileInput > input::file-selector-button {
    display: none;
}

.FileInput > input[type=file] {
    height: auto;
}

.Overlay .icon path {
    fill: var(--color-base-content);;
    stroke: var(--color-base-content);;
}

#imagePreview {
    min-height: 4rem;
    max-height: 12rem;
}

.Overlay details {
    user-select: none;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.Overlay summary {
    display: flex;
    cursor: pointer;
}

.Overlay summary::-webkit-details-marker {
    display: none;
}

.Overlay tr {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
}

.Overlay .input {
    max-width: max-content;
}

.Grid {
    display: grid;
    grid-template-columns: repeat(6, 2rem);
    gap: 8px;
}

@media only screen and (min-width: 350px) {
    .Overlay {
        .Grid {
            grid-template-columns: repeat(8, 2rem);
        }
    }
}

@media only screen and (min-width: 580px) {
    .Overlay {
        .Grid {
            grid-template-columns: repeat(14, 2rem);
        }
    }

    .desktop-auto {
        max-width: unset !important;
    }
}

.Overlay h2 {
    font-size: 14pt;
    font-weight: bold;
}

.Overlay img {
    image-rendering: pixelated;
}

.Overlay ul {
    list-style-type: circle;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-start;
}
